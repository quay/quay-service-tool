apiVersion: v1
kind: Template
metadata:
  name: quayio-service-tool
parameters:
- name: QUAY_SERVICE_TOOL_CONFIG_SECRET
  value: "quay-service-tool-config"
  required: true
- name: IMAGE
  value: "quay.io/app-sre/quayio-service-tool"
  required: true
- name: IMAGE_TAG
  value: ""
  required: true
- name: ACTIVE_DEADLINE_SECONDS
  value: "600"
  required: true
- name: CONFIG_MOUNT_PATH
  value: "/config"
  required: true
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: quayio-service-tool
    labels:
      app: quayio-service-tool
  spec:
    selector:
      matchLabels:
        app: quayio-service-tool
    template:
      metadata:
        labels:
          app: quayio-service-tool
      spec:
        volumes:
        - name: config
          secret:
            secretName: ${{QUAY_SERVICE_TOOL_CONFIG_SECRET}}
        containers:
        - name: quayio-service-tool
          image: ${IMAGE}:${IMAGE_TAG}
          volumeMounts:
          - name: config
            mountPath: ${{CONFIG_MOUNT_PATH}}
            readOnly: true
          ports:
          - containerPort: 5000
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          env:
          - name: CONFIG_PATH
            value: ${{CONFIG_MOUNT_PATH}}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            failureThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            failureThreshold: 1
- apiVersion: v1
  kind: Service
  metadata:
    name: quayio-service-tool
    labels:
      run: quayio-service-tool
  spec:
    ports:
    - name: http
      port: 80
      targetPort: 5000
    selector:
      app: quayio-service-tool
- apiVersion: v1
  kind: Service
  metadata:
    name: quayio-service-tool-load-balancer
    labels:
      run: quayio-service-tool-load-balancer
  spec:
    ports:
    - name: http
      port: 80
      targetPort: 5000
    type: LoadBalancer
    selector:
      app: quayio-service-tool
- apiVersion: v1
  kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
    name: quayio-service-tool-allow-external
  spec:
    podSelector:
      matchLabels:
        app: quayio-service-tool
    ingress:
      - {}
    policyTypes:
      - Ingress
